<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>vs2017-WebAPI编译报错</title>
      <link href="/2019/09/04/vs2017-WebAPI%E7%BC%96%E8%AF%91%E6%8A%A5%E9%94%99/"/>
      <url>/2019/09/04/vs2017-WebAPI%E7%BC%96%E8%AF%91%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<h2 id="VS2017-web-api编译时-对路径“bin-roslyn-System-Reflection-Metadata-dll”的访问被拒绝-解决办法"><a href="#VS2017-web-api编译时-对路径“bin-roslyn-System-Reflection-Metadata-dll”的访问被拒绝-解决办法" class="headerlink" title="VS2017 web api编译时 对路径“bin\roslyn\System.Reflection.Metadata.dll”的访问被拒绝 解决办法"></a>VS2017 web api编译时 对路径“bin\roslyn\System.Reflection.Metadata.dll”的访问被拒绝 解决办法</h2><p>使用visual studio开发，一重新编译就会报错：<br>对路径“bin\roslyn\System.Reflection.Metadata.dll”的访问被拒绝</p><p>一开始的解决办法就是把bin下的文件都删除了，但是roslyn文件夹下的部分文件一直被占用，必须进程中把vbcscompiler进程干掉，才能删除，再重新编译，就没问题了。</p><p>但是过不了多久，编译又出错。</p><p>把这个组件，通过nuget更新到1.0.7以上就可以了。</p>]]></content>
      
      
      <categories>
          
          <category> RESTful </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebAPI </tag>
            
            <tag> RESTful </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RESTful API 设计最佳实践</title>
      <link href="/2019/09/03/RESTful-API-%E8%AE%BE%E8%AE%A1%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/"/>
      <url>/2019/09/03/RESTful-API-%E8%AE%BE%E8%AE%A1%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/</url>
      
        <content type="html"><![CDATA[<p>英文原文：Best Practices for Designing a Pragmatic RESTful API</p><p>数据模型已经稳定，接下来你可能需要为web（网站）应用创建一个公开的API（应用程序编程接口）。需要认识到这样一个问题：一旦API发布后，就很难对它做很大的改动并且保持像先前一样的正确性。现在，网络上有很多关于API设计的思路。但是在全部案例中没有一种被广泛采纳的标准，有很多的选择：你接受什么样的格式？如何认证？API应该被版本化吗？</p><p>在为SupportFu（一个轻量级的Zendesk替换实现）设计API时，对于这些问题我尽量得出一些务实的答案。我的目标是设计这样一个API，它容易使用和采纳，足够灵活去为我们用户接口去埋单。</p><p>##API的关键要求<br>许多网上能找到的API设计观点都是些学术讨论，这些讨论是关于模糊标准的主观解释，而不是关于在现实世界中具有意义的事。本文中我的目标是，描述一下为当今的web应用而设计的实用的API的最佳实践。如果感觉不对，我不会去尝试满足某个标准。为了帮助进行决策，我已经写下了API必须力争满足的一些要求:</p><p>它应当在需要的地方使用 web 标准<br>它应当对开发者友好并且便于在浏览器地址栏中浏览和探索<br>它应当是简单、直观和一致的，使它用起来方便和舒适<br>它应当提供足够的灵活性来增强大多数的 SupportFu 用户界面<br>它应当是高效的，同时要维持和其他需求之间的平衡<br>一个 API 是一个开发者的 UI - 就像其他任何 UI 一样, 确保用户体验被认真的考虑过是很重要的!</p><p>##使用 RESTful URLs and actions<br>如果有一样东西获得广泛认可的话，那就是 RESTful 原则。Roy Felding 在他论文 network based software architectures 的 第五章 中首次介绍了这些原则。</p><p>这些REST的关键原则与将你的 API 分割成逻辑资源紧密相关。使用HTTP请求控制这些资源，其中，这些方法（GET, POST, PUT, PATCH, DELETE）具有特殊含义。</p><p>可是我该整出什么样的资源呢？好吧，它们应该是有意义于 API 使用者的名词（不是动词）。虽然内部Model可以简单地映射到资源上，但那不一定是个一对一的映射。这里的关键是不要泄漏与API不相关的实现细节。一些相关的名词可以是 票，用户和小组。</p><p>一旦定义好了资源, 需要确定什么样的 actions 应用它们，这些 actions 怎么映射到你的 API 上。RESTful 原则提供了 HTTP methods 映射作为策略来处理 CRUD actions，如下：</p><p>GET /tickets - 获取 tickets 列表<br>GET /tickets/12 - 获取一个单独的 ticket<br>POST /tickets - 创建一个新的 ticket<br>PUT /tickets/12 - 更新 ticket #12<br>PATCH /tickets/12 - 部分更新 ticket #12<br>DELETE /tickets/12 - 删除 ticket #12<br>REST 非常棒的是，利用现有的 HTTP 方法在单个的 /tickets 接入点上实现了显著的功能。没有什么方法命名约定需要去遵循，URL 结构是整洁干净的。 REST 太棒了!</p><p>接入点的名称应该选择单数还是复数呢？keep-it-simple原则可以在此应用。虽然你内在的语法知识会告诉你用复数形式描述单一资源实例是错误的，但实用主义的答案是保持URL格式一致并且始终使用复数形式。不用处理各种奇形怪状的复数形式（比如person/people，goose/geese）可以让API消费者的生活更加美好，也让API提供者更容易实现API（因为大多数现代框架天然地将/tickets和/tickets/12放在同一个控制器下处理）。</p><p>但是你该如何处理（资源的）关系呢？如果关系依托于另外一个资源，Restful原则提供了很好的指导原则。让我们来看一个例子。SupportFu的一个ticket包含许多消息（message）。这些消息逻辑上与/tickets接入点的映射关系如下：</p><p>GET /tickets/12/messages - 获取ticket #12下的消息列表<br>GET /tickets/12/messages/5 - 获取ticket #12下的编号为5的消息<br>POST /tickets/12/messages - 为ticket #12创建一个新消息<br>PUT /tickets/12/messages/5 - 更新ticket #12下的编号为5的消息<br>PATCH /tickets/12/messages/5 - 部分更新ticket #12下的编号为5的消息<br>DELETE /tickets/12/messages/5 - 删除ticket #12下的编号为5的消息</p><p>或者如果某种关系不依赖于资源，那么在资源的输出表示中只包含一个标识符是有意义的。API消费者然后除了请求资源所在的接入点外，还得再请求一次关系所在的接入点。但是如果一般情况关系和资源一起被请求，API可以提供自动嵌套关系表示到资源表示中，这样可以防止两次请求API。</p><p>如果Action不符合CRUD操作那该怎么办？</p><p>这是一个可能让人感到模糊不解的地方。有几种处理方法：</p><p>重新构造这个Action，使得它像一个资源的field（我理解为部分域或者部分字段）。这种方法在Action不包含参数的情况下可以奏效。例如一个有效的action可以映射成布尔类型field，并且可以通过PATCH更新资源。<br>利用RESTful原则像处理子资源一样处理它。例如，Github的API让你通过PUT /gists/:id/star 来 star a gist ，而通过DELETE /gists/:id/star来进行 unstar 。<br>有时候你实在是没有办法将Action映射到任何有意义的RESTful结构。例如，多资源搜索没办法真正地映射到任何一个资源接入点。这种情况，/search 将非常有意义，虽然它不是一个名词。这样做没有问题 - 你只需要从API消费者的角度做正确的事，并确保所做的一切都用文档清晰记录下来了以避免（API消费者的）困惑。</p><p>##总是使用 SSH<br>总是使用SSL，没有例外。今天，您的web api可以从任何地方访问互联网(如图书馆、咖啡店、机场等)。不是所有这些都是安全的，许多不加密通信,便于窃听或伪造，如果身份验证凭证被劫持。</p><p>另一个优点是,保证总是使用SSL加密通信简化了认证效果——你可以摆脱简单的访问令牌,而不是让每个API请求签署。</p><p>要注意的一点是非SSL访问API URLs。不要重定向这些到对应的SSL。相反，抛出一个系统错误!最后一件你想要的是配置不佳的客户发送请求到一个未加密的端点，只是默默地重定向到实际加密的端点。</p><p>##文档<br>API的好坏关键看其文档的好坏. 好的API的说明文档应该很容易就被找到，并能公开访问。在尝试任何整合工作前大部分开发者会先查看其文档。当文档被藏于一个PDF之中或要求必须登记信息时，将很难被找到也很难搜索到。</p><p>好的文档须提供从请求到响应整个循环的示例。最好的是，请求应该是可粘贴的例子，要么是可以贴到浏览器的链接，要么是可以贴到终端里的curl示例 。 GitHub 和 Stripe 在这方面做的非常出色。</p><p>一旦你发布一个公开的API，你必须承诺”在没有通告的前提下，不会更改APIDe功能” .对于外部可见API的更新，文档必须包含任何将废弃的API的时间表和详情。应该通过博客(更新日志)或者邮件列表送达更新说明(最好两者都通知)。 </p><p>##版本控制<br>必须对API进行版本控制。版本控制可以快速迭代并避免无效的请求访问已更新的接入点。它也有助于帮助平滑过渡任何大范围的API版本变迁，这样就可以继续支持旧版本API。</p><p>关于API的版本是否应该包含在URL或者请求头中 莫衷一是。从学术派的角度来讲，它应该出现在请求头中。然而版本信息出现在URL中必须保证不同版本资源的浏览器可浏览性（browser explorability），还记得文章开始提到的API要求吗？</p><p>我非常赞成 approach that Stripe has taken to API versioning - URL包含一个主版本号（比如<a href="http://shonzilla/api/v1/customers/1234）" target="_blank" rel="noopener">http://shonzilla/api/v1/customers/1234）</a><br>），但是API还包含基于日期的子版本（比如<a href="http://shonzilla/api/v1.2/customers/1234" target="_blank" rel="noopener">http://shonzilla/api/v1.2/customers/1234</a>），可以通过配置HTTP请求头来进行选择。这种情况下，主版本确保API结构总体稳定性，而子版本会考虑细微的变化（field deprecation、接入点变化等）。</p><p>API不可能完全稳定。变更不可避免，重要的是变更是如何被控制的。维护良好的文档、公布未来数月的deprecation计划，这些对于很多API来说都是一些可行的举措。它归根结底是看对于业界和API的潜在消费者是否合理。</p><p>##结果过滤，排序和搜索<br>最好是尽量保持基本资源URL的简洁性。 复杂结果过滤器、排序需求和高级搜索 (当限定在单一类型的资源时) ，都能够作为在基本URL之上的查询参数来轻松实现。下面让我们更详细的看一下:</p><p>过滤: 对每一个字段使用一个唯一查询参数，就可以实现过滤。 例如，当通过“/tickets”终端来请求一个票据列表时，你可能想要限定只要那些在售的票。这可以通过一个像 GET /tickets?state=open 这样的请求来实现。这里“state”是一个实现了过滤功能的查询参数。</p><p>排序: 跟过滤类似, 一个泛型参数排序可以被用来描述排序的规则. 为适应复杂排序需求，让排序参数采取逗号分隔的字段列表的形式，每一个字段前都可能有一个负号来表示按降序排序。我们看几个例子:</p><p>GET /tickets?sort=-priority - 获取票据列表，按优先级字段降序排序<br>GET /tickets?sort=-priority,created_at - 获取票据列表，按“priority”字段降序排序。在一个特定的优先级内，较早的票排在前面。</p><p>搜索: 有时基本的过滤不能满足需求，这时你就需要全文检索的力量。或许你已经在使用  ElasticSearch 或者其它基于  Lucene 的搜索技术。当全文检索被用作获取某种特定资源的资源实例的机制时， 它可以被暴露在API中，作为资源终端的查询参数，我们叫它“q”。搜索类查询应当被直接交给搜索引擎，并且API的产出物应当具有同样的格式，以一个普通列表作为结果。</p><p>把这些组合在一起，我们可以创建以下一些查询:</p><p>GET /tickets?sort=-updated_at - 获取最近更新的票<br>GET /tickets?state=closed&amp;sort=-updated_at - 获取最近更新并且状态为关闭的票。<br>GET /tickets?q=return&amp;state=open&amp;sort=-priority,created_at - 获取优先级最高、最先创建的、状态为开放的票，并且票上有 ‘return’ 字样。<br>一般查询的别名</p><p>为了使普通用户的API使用体验更加愉快， 考虑把条件集合包装进容易访问的RESTful 路径中。比如上面的，最近关闭的票的查询可以被包装成 GET /tickets/recently_closed</p><p>##限制哪些字段由API返回<br>API的使用者并不总是需要一个资源的完整表示。选择返回字段的功能由来已久，它使得API使用者能够最小化网络阻塞，并加速他们对API的调用。</p><p>使用一个字段查询参数，它包含一个用逗号隔开的字段列表。例如，下列请求获得的信息将刚刚足够展示一个在售票的有序列表:</p><p>GET /tickets?fields=id,subject,customer_name,updated_at&amp;state=open&amp;sort=-updated_at</p><p>##更新和创建应该返回一个资源描述<br>一个 PUT, POST 或者 PATCH 调用可能会对指定资源的某些字段造成更改，而这些字段本不在提供的参数之列 (例如: created_at 或 updated_at 这两个时间戳)。 为了防止API使用者为了获取更新后的资源而再次调用该API，应当使API把更新(或创建)后的资源作为response的一部分来返回。</p><p>以一个产生创建活动的 POST 操作为例, 使用一个 HTTP 201 状态代码 然后包含一个 Location header 来指向新生资源的URL。</p><p>##你是否应该HATEOAS?<br>（译注：Hypermedia as the Engine of Application State (HATEOAS)超媒体作为应用程序状态引擎）</p><p>对于API消费方是否应该创建链接，或者是否应该将链接提供给API，有许多混杂的观点。RESTful的设计原则指定了HATEOAS ，大致说明了与某个端点的交互应该定义在元数据(metadata)之中，这个元数据与输出结果一同到达，并不基于其他地方的信息。</p><p>虽然web逐渐依照HATEOAS类型的原则运作（我们打开一个网站首页并随着我们看到的页面中的链接浏览），我不认为我们已经准备好API的HATEOAS了。当浏览一个网站的时候，决定点击哪个链接是运行时做出的。然而，对于API，决定哪个请求被发送是在写API集成代码时做出的，并不是运行时。这个决定可以移交到运行时吗？当然可以，不过顺着这条路没有太多好处，因为代码仍然不能不中断的处理重大的API变化。也就是说，我认为HATEOAS做出了承诺，但是还没有准备好迎接它的黄金时间。为了完全实现它的潜能，需要付出更多的努力去定义围绕着这些原则的标准和工具。</p><p>目前而言，最好假定用户已经访问过输出结果中的文档&amp;包含资源标识符，而这些API消费方会在制作链接的时候用到。关注标识符有几个优势——网络中的数据流减少了，API消费方存储的数据也减少了（因为它们存储的是小的标识符而不是包含标识符的URLs）。</p><p>同样的，在URL中提供本文倡导的版本号，对于在一个很长时间内API消费方存储资源标识符（而不是URLs），它更有意义。总之，标识符相对版本是稳定的，但是表示这一点的URL却不是的！</p><p>##只返回JSON<br>是时候在API中丢弃XML了。XML冗长，难以解析，很难读，他的数据模型和大部分编程语言的数据模型 不兼容，而他的可扩展性优势在你的主要需求是必须序列化一个内部数据进行输出展示时变得不相干。</p><p>我不打算对上述进行解释了，貌似诸如 (YouTube, Twitter 和 Box)之类的已经开始了去XML化.</p><p>给你一张google趋势图，比较XML API 和 JSON API的，供你参考:</p><figure class="image-box">                <img src="//mar1timus.github.io/2019/09/03/RESTful-API-设计最佳实践/r.png" alt="google趋势图" title class>                <p>google趋势图</p>            </figure><p>但是，如果你的客户群包括大量的企业客户,你会发现自己不得不支持XML的方式。如果你必须这样,一个新问题出现了:</p><p>媒体类型是应该基于Accept头还是基于URL呢 ? 为确保浏览器的浏览性，应该基于URL。这里最明智的选择是在端点URL后面附加 .json 或 .xml 的扩展.</p><p>##字段名称书写格式的 snake_case vs camelCase<br>如果你在使用JSON (JavaScript Object Notation) 作为你的主要表示格式，正确的方法就是遵守JavaScript命名约定——对字段名称使用camelCase！如果你要走用各种语言建设客户端库的路线，最好使用它们惯用的命名约定—— C# &amp; Java 使用camelCase, python &amp; ruby 使用snake_case。</p><p>深思：我一直认为snake_case比JavaScript的camelCase约定更容易阅读。我没有任何证据来支持我的直觉，直到现在，基于从2010年的camelCase 和 snake_case的眼动追踪研究 (PDF)，snake_case比驼峰更容易阅读20％！这种阅读上的影响会影响API的可勘探性和文档中的示例。</p><p>许多流行的JSON API使用snake_case。我怀疑这是由于序列化库遵从它们所使用的底层语言的命名约定。也许我们需要有JSON序列库来处理命名约定转换。</p><p>##缺省情况下确保漂亮的打印和支持gzip<br>一个提供空白符压缩输出的API，从浏览器中查看结果并不美观。虽然一些有序的查询参数（如 ?pretty=true ）可以提供来使漂亮打印生效，一个默认情况下能进行漂亮打印的API更为平易近人。额外数据传输的成本是微不足道的，尤其是当你比较不执行gzip压缩的成本。</p><p>考虑一些用例：假设分析一个API消费者正在调试并且有自己的代码来打印出从API收到的数据——默认情况下这应是可读的。或者，如果消费者抓住他们的代码生成的URL，并直接从浏览器访问它——默认情况下这应是可读的。这些都是小事情。做好小事情会使一个API能被更愉快地使用！</p><p>##那么该如何处理额外传输的数据呢？</p><p>让我们看一个实际例子。我从GitHub API上拉取了一些数据，默认这些数据使用了漂亮打印（pretty print）。我也将做一些GZIP压缩后的对比。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ curl &lt;https://api.github.com/users/veesahni&gt; &gt; with-whitespace.txt</span><br><span class="line">$ ruby -r json -e &apos;puts JSON JSON.parse(STDIN.read)&apos; &lt; with-whitespace.txt &gt; without-whitespace.txt</span><br><span class="line">$ gzip -c with-whitespace.txt &gt; with-whitespace.txt.gz</span><br><span class="line">$ gzip -c without-whitespace.txt ? without-whitespace.txt.gz</span><br></pre></td></tr></table></figure><p>输出文件的大小如下：<br>without-whitespace.txt - 1252 bytes<br>with-whitespace.txt - 1369 bytes<br>without-whitespace.txt.gz - 496 bytes<br>with-whitespace.txt.gz - 509 bytes<br>在这个例子中，当未启用GZIP压缩时空格增加了8.5%的额外输出大小，而当启用GZIP压缩时这个比例是2.6%。另一方面，GZIP压缩节省了60%的带宽。由于漂亮打印的代价相对比较小，最好默认使用漂亮打印，并确保GZIP压缩被支持。</p><p>关于这点想了解更多的话，Twitter发现当对他们的 Streaming API 开启GZIP支持后可以在某些情况获得 80%的带宽节省 。Stack Exchange甚至强制要求必须对API请求结果使用GZIP压缩（never return a response that’s not compressed）。</p><p>##不要默认使用大括号封装，但要在需要的时候支持<br>许多API会像下面这样包裹他们的响应信息:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;data&quot; : &#123;</span><br><span class="line">    &quot;id&quot; : 123,</span><br><span class="line">    &quot;name&quot; : &quot;John&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有不少这样做的理由 - 更容易附加元数据或者分页信息，一些REST客户端不允许轻易的访问HTTP头信息，并且JSONP请求不能访问HTTP头信息。无论怎样，随着迅速被采用的标准，比如CORS和Link header from RFC 5988, 大括号封装开始变得不必要。</p><p>我们应当默认不使用大括号封装，而仅在特殊情况下使用它，从而使我们的API面向未来。</p><p>##特殊情况下该如何使用大括号封装?</p><p>有两种情况确实需要大括号封装 - 当API需要通过JSONP来支持跨域的请求时，或者当客户端没有能力处理HTTP头信息时。</p><p>JSONP 请求附带有一个额外的查询参数(通常称为callback或jsonp) 表示了回调函数的名称。如果提供了这个参数，API应当切换至完整封装模式，这时它总是用200HTTP状态码作为响应，然后把真实的状态码放入JSON有效载荷中。任何被一并添加进响应中的额外的HTTP头信息都应当被映射到JSON字段中, 像这样:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">callback_function(&#123;</span><br><span class="line">  status_code: 200,</span><br><span class="line">  next_page: &quot;https://..&quot;,</span><br><span class="line">  response: &#123;</span><br><span class="line">    ... actual JSON response body ... </span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>类似的，为了支持HTTP受限的客户端，可以允许一个特殊的查询参数“?envelope=true”来触发完整封装(没有JSONP回调函数)。</p><p>##使用JSON 编码的 POST, PUT &amp; PATCH 请求体<br>如果你正在跟随本文中讲述的开发过程，那么你肯定已经接受JSON作为API的输出。下面让我们考虑使用JSON作为API的输入。</p><p>许多API在他们的API请求体中使用URL编码。URL编码正如它们听起来那样 - 将使用和编码URL查询参数时一样的约定，对请求体中的键值对进行编码。这很简单，被广泛支持而且实用。</p><p>然而，有几个问题使得URL编码不太好用。首先，它没有数据类型的概念。这迫使API从字符串中转换整数和布尔值。而且，它并没有真正的层次结构的概念。尽管有一些约定，可以用键值对构造出一些结构（比如给一个键增加“[]”来表示一个数组），但还是不能跟JSON原生的层次结构相比。</p><p>如果API很简单，URL编码可以满足需要。然而，复杂API应当严格对待他们的JSON格式的输入。不论哪种方式，选定一个并且整套API要保持一致。</p><p>一个能接受JSON编码的POST, PUT 和 PATCH请求的API，应当也需要把Content-Type头信息设置为application/json，或者抛出一个415不支持的媒体类型（Unsupported Media Type）的HTTP状态码。</p><p>##分页<br>信封喜欢将分页信息包含在信封自身的API。我不能指责这点——直到最近，我们才找到更好的方法。正确的方法是使用 RFC 5988 中介绍的链接标头。</p><p>使用链接标头的API可以返回一系列线程的链接，API使用者无需自行生成链接。这在分页时指针导向 非常重要。下面是抓取自 Github的正确使用链接标头的文件：</p><p>Link: <a href="https://api.github.com/user/repos?page=3&amp;per_page=100" target="_blank" rel="noopener">https://api.github.com/user/repos?page=3&amp;per_page=100</a>; rel=”next”, <a href="https://api.github.com/user/repos?page=50&amp;per_page=100" target="_blank" rel="noopener">https://api.github.com/user/repos?page=50&amp;per_page=100</a>; rel=”last”</p><p>不过这个并非完成版本，因为很多 API 喜欢返回额外信息，例如可用结果的总数。需要发送数量的 API 可用类似 X-Total-Count 的普通 HTTP 标头。</p><p>##自动装载相关的资源描述<br>在很多种情况下，API的使用者需要加载和被请求资源相关的数据（或被请求资源引用的数据）。与要求使用者反复访问API来获取这些信息相比，允许在请求原始资源的同时一并返回和装载相关资源，将会带来明显的效率提升。</p><p>然而, 由于这样确实 有悖于一些RESTful原则, 所以我们可以只使用一个内置的（或扩展）的查询参数来实现这一功能，来最小化与原则的背离。</p><p>这种情况下，“embed”将是一个逗号隔开的需要被内置的字段列表。点号可以用来表示子字段。例如:</p><p>GET /ticket/12?embed=customer.name,assigned_user</p><p>这将返回一个附带有详细内置信息的票据，如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;id&quot; : 12,</span><br><span class="line">  &quot;subject&quot; : &quot;I have a question!&quot;,</span><br><span class="line">  &quot;summary&quot; : &quot;Hi, ....&quot;,</span><br><span class="line">  &quot;customer&quot; : &#123;</span><br><span class="line">    &quot;name&quot; : &quot;Bob&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  assigned_user: &#123;</span><br><span class="line">   &quot;id&quot; : 42,</span><br><span class="line">   &quot;name&quot; : &quot;Jim&quot;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然，实现类似于这种功能的能力完全依赖于内在的复杂度。这种内置的做法很容易产生 N+1 select 问题。</p><p>##重写/覆盖   HTTP 方法<br>一些HTTP客户端仅能处理简单的的GET和POST请求，为照顾这些功能有限的客户端，API需要一种方式来重写HTTP方法. 尽管没有一些硬性标准来做这事，但流行的惯例是接受一种叫 X-HTTP的请求头，重写是用一个字符串值包含PUT，PATCH或DELETE中的一个。</p><p>注意重写头应当仅接受POST请求，GET请求绝不应该 更改服务器上的数据!</p><p>##速率限制<br>为了防止滥用，标准的做法是给API增加某种类型的速率限制。RFC 6585 中介绍了一个HTTP状态码429 请求过多来实现这一点。</p><p>不论怎样，在用户实际受到限制之前告知他们限制的存在是很有用的。这是一个现在还缺乏标准的领域，但是已经有了一些流行的使用HTTP响应头信息的惯用方法。</p><p>最少时包含下列头信息(使用Twitter的命名约定 来作为头信息，通常没有中间词的大写):</p><p>X-Rate-Limit-Limit - 当期允许请求的次数<br>X-Rate-Limit-Remaining - 当期剩余的请求次数<br>X-Rate-Limit-Reset - 当期剩余的秒数</p><p>为什么对X-Rate-Limit-Reset不使用时间戳而使用秒数?</p><p>一个时间戳包含了各种各样的信息，比如日期和时区，但它们却不是必需的。一个API使用者其实只是想知道什么时候能再次发起请求，对他们来说一个秒数用最小的额外处理回答了这个问题。同时规避了时钟偏差的问题。</p><p>有些API给X-Rate-Limit-Reset使用UNIX时间戳(纪元以来的秒数)。不要这样做!</p><p>为什么对X-Rate-Limit-Reset使用UNIX时间戳是不好的做法?</p><p>HTTP 规范已经指定使用RFC 1123 的日期格式 (目前被使用在日期, If-Modified-Since &amp; Last-Modified HTTP头信息中)。如果我们打算指定一种使用某种形式时间戳的、新的HTTP头信息，我们应当遵循RFC 1123规定，而不是使用UNIX时间戳。</p><p>##认证<br>一个 RESTful API 应当是无状态的。这意味着认证请求应当不依赖于cookie或session。相反，每一个请求都应当携带某种类型的认证凭证。</p><p>由于总是使用SSL，认证凭证能够被简化为一个随机产生的访问令牌，里面传入一个使用HTTP Basic Auth的用户名字段。这样做的极大的好处是，它是完全的浏览器可探测的 - 如果浏览器从服务器收到一个401未授权状态码，它仅需要一个弹出框来索要凭证即可。</p><p>然而，这种基于基本认证的令牌的认证方法，仅在满足下列情形时才可用，即用户可以把令牌从一个管理接口复制到API使用者环境。当这种情形不能成立时，应当使用OAuth 2来产生安全令牌并传递给第三方。OAuth 2使用了承载令牌(Bearer tokens) 并且依赖于SSL的底层传输加密。</p><p>一个需要支持JSONP的API将需要第三种认证方法，因为JSONP请求不能发送HTTP基本认证凭据(HTTP Basic Auth)或承载令牌(Bearer tokens) 。这种情况下，可以使用一个特殊的查询参数access_token。注意，使用查询参数token存在着一个固有的安全问题，即大多数的web服务器都会把查询参数记录到服务日志中。</p><p>这是值得的，所有上面三种方法都只是跨API边界两端的传递令牌的方式。实际的底层令牌本身可能都是相同的。</p><p>##缓存<br>HTTP 提供了一套内置的缓存框架! 所有你必须做的是，包含一些额外的出站响应头信息，并且在收到一些入站请求头信息时做一点儿校验工作。</p><p>有两种方式: ETag和Last-Modified</p><p>ETag: 当产生一个请求时, 包含一个HTTP 头，ETag会在里面置入一个和表达内容对应的哈希值或校验值。这个值应当跟随表达内容的变化而变化。现在，如果一个入站HTTP请求包含了一个If-None-Match头和一个匹配的ETag值，API应当返回一个304未修改状态码，而不是返回请求的资源。</p><p>Last-Modified: 基本上像ETag那样工作，不同的是它使用时间戳。在响应头中，Last-Modified包含了一个RFC 1123格式的时间戳，它使用If-Modified-Since来进行验证。注意，HTTP规范已经有了 3 种不同的可接受的日期格式 ，服务器应当准备好接收其中的任何一种。</p><p>##错误<br>就像一个HTML错误页面给访问者展示了有用的错误信息一样，一个API应当以一种已知的可使用的格式来提供有用的错误信息。 错误的表示形式应当和其它任何资源没有区别，只是有一套自己的字段。</p><p>API应当总是返回有意义的HTTP状态代码。API错误通常被分成两种类型: 代表客户端问题的400系列状态码和代表服务器问题的500系列状态码。最简情况下，API应当把便于使用的JSON格式作为400系列错误的标准化表示。如果可能(意思是，如果负载均衡和反向代理能创建自定义的错误实体), 这也适用于500系列错误代码。</p><p>一个JSON格式的错误信息体应当为开发者提供几样东西 - 一个有用的错误信息，一个唯一的错误代码 (能够用来在文档中查询详细的错误信息) 和可能的详细描述。这样一个JSON格式的输出可能会像下面这样:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;code&quot; : 1234,</span><br><span class="line">  &quot;message&quot; : &quot;Something bad happened :(&quot;,</span><br><span class="line">  &quot;description&quot; : &quot;More details about the error here&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对PUT, PATCH和POST请求进行错误验证将需要一个字段分解。下面可能是最好的模式：使用一个固定的顶层错误代码来验证错误，并在额外的字段中提供详细错误信息，就像这样:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;code&quot; : 1024,</span><br><span class="line">  &quot;message&quot; : &quot;Validation Failed&quot;,</span><br><span class="line">  &quot;errors&quot; : [</span><br><span class="line">    &#123;</span><br><span class="line">      &quot;code&quot; : 5432,</span><br><span class="line">      &quot;field&quot; : &quot;first_name&quot;,</span><br><span class="line">      &quot;message&quot; : &quot;First name cannot have fancy characters&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">       &quot;code&quot; : 5622,</span><br><span class="line">       &quot;field&quot; : &quot;password&quot;,</span><br><span class="line">       &quot;message&quot; : &quot;Password cannot be blank&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>##HTTP 状态代码<br>HTTP定义了一套可以从API返回的有意义的状态代码。 这些代码能够用来帮助API使用者对不同的响应做出相应处理。我已经把你必然会用到的那些列成了一个简短的清单:</p><p>200 OK (成功) - 对一次成功的GET, PUT, PATCH 或 DELETE的响应。也能够用于一次未产生创建活动的POST<br>201 Created (已创建) - 对一次导致创建活动的POST的响应。 同时结合使用一个位置头信息指向新资源的位置- Response to a POST that results in a creation. Should be combined with a Location header pointing to the location of the new resource<br>204 No Content (没有内容) - 对一次没有返回主体信息(像一次DELETE请求)的请求的响应<br>304 Not Modified (未修改) - 当使用HTTP缓存头信息时使用304<br>400 Bad Request (错误的请求) - 请求是畸形的, 比如无法解析请求体<br>401 Unauthorized (未授权) - 当没有提供或提供了无效认证细节时。如果从浏览器使用API，也可以用来触发弹出一次认证请求<br>403 Forbidden (禁止访问) - 当认证成功但是认证用户无权访问该资源时<br>404 Not Found (未找到) - 当一个不存在的资源被请求时<br>405 Method Not Allowed (方法被禁止) - 当一个对认证用户禁止的HTTP方法被请求时<br>410 Gone (已删除) - 表示资源在终端不再可用。当访问老版本API时，作为一个通用响应很有用<br>415 Unsupported Media Type (不支持的媒体类型) - 如果请求中包含了不正确的内容类型<br>422 Unprocessable Entity (无法处理的实体) - 出现验证错误时使用<br>429 Too Many Requests (请求过多) - 当请求由于访问速率限制而被拒绝时<br>总结<br>一个API是一个给开发者使用的用户接口。要努力确保它不仅功能上可用，更要用起来愉快。</p><p>转载自：<a href="https://www.oschina.net/translate/best-practices-for-a-pragmatic-restful-api" target="_blank" rel="noopener">https://www.oschina.net/translate/best-practices-for-a-pragmatic-restful-api</a></p>]]></content>
      
      
      <categories>
          
          <category> RESTful </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WebAPI </tag>
            
            <tag> RESTful </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WinForm上传文件的多种方案解析</title>
      <link href="/2012/09/01/WinForm%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E7%9A%84%E5%A4%9A%E7%A7%8D%E6%96%B9%E6%A1%88%E8%A7%A3%E6%9E%90/"/>
      <url>/2012/09/01/WinForm%E4%B8%8A%E4%BC%A0%E6%96%87%E4%BB%B6%E7%9A%84%E5%A4%9A%E7%A7%8D%E6%96%B9%E6%A1%88%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="方案一："><a href="#方案一：" class="headerlink" title="方案一："></a>方案一：</h2><p>注意：要开启虚拟目录的“写入”权限，要不然就报 403 错误</p><p>工作中用到winform上传文件<br>碰到一点问题，解决如下<br>1、501 为实现错误<br>解决方法：<br>先把IISWEB服务扩展中的WebDev打开<br>然后<br>IIS站点添加MIME  txt类型 常见的MIME类型如下<br>超文本标记语言文本 .html,.html text/html<br>普通文本 .txt text/plain<br>RTF文本 .rtf application/rtf<br>GIF图形 .gif image/gif<br>JPEG图形 .ipeg,.jpg image/jpeg<br>au声音文件 .au audio/basic<br>MIDI音乐文件 mid,.midi audio/midi,audio/x-midi<br>RealAudio音乐文件 .ra, .ram audio/x-pn-realaudio<br>MPEG文件 .mpg,.mpeg video/mpeg<br>AVI文件 .avi video/x-msvideo<br>GZIP文件 .gz application/x-gzip<br>TAR文件 .tar application/x-tar<br>再然后<br>设置目标文件夹的可写性</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Net;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Common</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> winform形式的文件传输类</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">WinFileTransporter</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> WebClient上传文件至服务器，默认不自动改名</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="fileNamePath"&gt;</span>文件名，全路径格式<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="uriString"&gt;</span>服务器文件夹路径<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UpLoadFile</span>(<span class="params"><span class="keyword">string</span> fileNamePath, <span class="keyword">string</span> uriString</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            UpLoadFile(fileNamePath, uriString, <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> WebClient上传文件至服务器</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="fileNamePath"&gt;</span>文件名，全路径格式<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="uriString"&gt;</span>服务器文件夹路径<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="IsAutoRename"&gt;</span>是否自动按照时间重命名<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UpLoadFile</span>(<span class="params"><span class="keyword">string</span> fileNamePath, <span class="keyword">string</span> uriString, <span class="keyword">bool</span> IsAutoRename</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> fileName = fileNamePath.Substring(fileNamePath.LastIndexOf(<span class="string">"\\"</span>) + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">string</span> NewFileName = fileName;</span><br><span class="line">            <span class="keyword">if</span> (IsAutoRename)</span><br><span class="line">            &#123;</span><br><span class="line">                NewFileName = DateTime.Now.ToString(<span class="string">"yyMMddhhmmss"</span>) + DateTime.Now.Millisecond.ToString() + fileNamePath.Substring(fileNamePath.LastIndexOf(<span class="string">"."</span>));</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">string</span> fileNameExt = fileName.Substring(fileName.LastIndexOf(<span class="string">"."</span>) + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (uriString.EndsWith(<span class="string">"/"</span>) == <span class="literal">false</span>) uriString = uriString + <span class="string">"/"</span>;</span><br><span class="line"> </span><br><span class="line">            uriString = uriString + NewFileName;</span><br><span class="line">            Utility.LogWriter log = <span class="keyword">new</span> Utility.LogWriter();</span><br><span class="line">            <span class="comment">//log.AddLog(uriString, "Log");</span></span><br><span class="line">            <span class="comment">//log.AddLog(fileNamePath, "Log");</span></span><br><span class="line">            <span class="comment">/**/</span></span><br><span class="line">            <span class="comment"><span class="doctag">///</span> 创建WebClient实例</span></span><br><span class="line">            WebClient myWebClient = <span class="keyword">new</span> WebClient();</span><br><span class="line">            myWebClient.Credentials = CredentialCache.DefaultCredentials;</span><br><span class="line">            <span class="comment">// 要上传的文件</span></span><br><span class="line">            FileStream fs = <span class="keyword">new</span> FileStream(fileNamePath, FileMode.Open, FileAccess.Read);</span><br><span class="line">            <span class="comment">//FileStream fs = OpenFile();</span></span><br><span class="line">            BinaryReader r = <span class="keyword">new</span> BinaryReader(fs);</span><br><span class="line">            <span class="keyword">byte</span>[] postArray = r.ReadBytes((<span class="keyword">int</span>)fs.Length);</span><br><span class="line">            Stream postStream = myWebClient.OpenWrite(uriString, <span class="string">"PUT"</span>);</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line"> </span><br><span class="line">                <span class="comment">//使用UploadFile方法可以用下面的格式</span></span><br><span class="line">                <span class="comment">//myWebClient.UploadFile(uriString,"PUT",fileNamePath);</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">                <span class="keyword">if</span> (postStream.CanWrite)</span><br><span class="line">                &#123;</span><br><span class="line">                    postStream.Write(postArray, <span class="number">0</span>, postArray.Length);</span><br><span class="line">                    postStream.Close();</span><br><span class="line">                    fs.Dispose();</span><br><span class="line">                    log.AddLog(<span class="string">"上传日志文件成功！"</span>, <span class="string">"Log"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    postStream.Close();</span><br><span class="line">                    fs.Dispose();</span><br><span class="line">                    log.AddLog(<span class="string">"上传日志文件失败，文件不可写！"</span>, <span class="string">"Log"</span>);</span><br><span class="line">                &#125;</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception err)</span><br><span class="line">            &#123;</span><br><span class="line">                postStream.Close();</span><br><span class="line">                fs.Dispose();</span><br><span class="line">                <span class="comment">//Utility.LogWriter log = new Utility.LogWriter();</span></span><br><span class="line">                log.AddLog(err, <span class="string">"上传日志文件异常！"</span>, <span class="string">"Log"</span>);</span><br><span class="line">                <span class="keyword">throw</span> err;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">finally</span></span><br><span class="line">            &#123;</span><br><span class="line">                postStream.Close();</span><br><span class="line">                fs.Dispose();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">        <span class="comment">/**/</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 下载服务器文件至客户端</span></span><br><span class="line"> </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="URL"&gt;</span>被下载的文件地址，绝对路径<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="Dir"&gt;</span>另存放的目录<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Download</span>(<span class="params"><span class="keyword">string</span> URL, <span class="keyword">string</span> Dir</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            WebClient client = <span class="keyword">new</span> WebClient();</span><br><span class="line">            <span class="keyword">string</span> fileName = URL.Substring(URL.LastIndexOf(<span class="string">"\\"</span>) + <span class="number">1</span>);  <span class="comment">//被下载的文件名</span></span><br><span class="line"> </span><br><span class="line">            <span class="keyword">string</span> Path = Dir + fileName;   <span class="comment">//另存为的绝对路径＋文件名</span></span><br><span class="line">            Utility.LogWriter log = <span class="keyword">new</span> Utility.LogWriter();</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                WebRequest myre = WebRequest.Create(URL);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception err)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//MessageBox.Show(exp.Message,"Error"); </span></span><br><span class="line">                log.AddLog(err, <span class="string">"下载日志文件异常！"</span>, <span class="string">"Log"</span>);</span><br><span class="line">            &#125;</span><br><span class="line"> </span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                client.DownloadFile(URL, fileName);</span><br><span class="line">                FileStream fs = <span class="keyword">new</span> FileStream(fileName, FileMode.Open, FileAccess.Read);</span><br><span class="line">                BinaryReader r = <span class="keyword">new</span> BinaryReader(fs);</span><br><span class="line">                <span class="keyword">byte</span>[] mbyte = r.ReadBytes((<span class="keyword">int</span>)fs.Length);</span><br><span class="line"> </span><br><span class="line">                FileStream fstr = <span class="keyword">new</span> FileStream(Path, FileMode.OpenOrCreate, FileAccess.Write);</span><br><span class="line"> </span><br><span class="line">                fstr.Write(mbyte, <span class="number">0</span>, (<span class="keyword">int</span>)fs.Length);</span><br><span class="line">                fstr.Close();</span><br><span class="line"> </span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception err)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//MessageBox.Show(exp.Message,"Error");</span></span><br><span class="line">                log.AddLog(err, <span class="string">"下载日志文件异常！"</span>, <span class="string">"Log"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="方案二："><a href="#方案二：" class="headerlink" title="方案二："></a>方案二：</h2><p>转：<a href="http://blog.csdn.net/walkinhill/archive/2004/08/28/87656.aspx" target="_blank" rel="noopener">http://blog.csdn.net/walkinhill/archive/2004/08/28/87656.aspx</a></p><p>相信用ASP.NET写一个上传文件的网页，大家都会写，但是有没有人想过通过在WinForm中通过HTTP协议上传文件呢？</p><p>有些人说要向服务器端上传文件，用FTP协议不是很简单吗？效率又高，为什么还要使用HTTP协议那么麻烦呢？这里面有几个原因：</p><p>（1）FTP服务器的部署相对麻烦，还要设置权限，权限设置不对，还会惹来一系列的安全问题。</p><p>（2）如果双方都还有防火墙，又不想开发FTP相关的一些端口时，HTTP就会大派用场，就像WEB Services能穿透防火墙一样。</p><p>（3）其他的…，还在想呢…</p><p>但是使用HTTP也有他的一些问题，例如不能断点续传，大文件上传很难，速度很慢，所以HTTP协议上传的文件大小不应该太大。</p><p>说了这么多，原归正传，一般来说，在Winform里通过HTTP上传文件有几种可选的方法：</p><p>（1）前面提到的Web Services，就是一种很好的方法，通过编写一个WebMethod，包含有 byte[] 类型的参数，然后调用Web Services的方法，文件内容就会以Base64编码传到服务器上，然后重新保存即可。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">WebMethod</span>]</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">UploadFile</span>(<span class="params"><span class="keyword">byte</span>[] content,<span class="keyword">string</span> filename</span>)</span>&#123;</span><br><span class="line">           Stream sw = <span class="keyword">new</span> StreamWriter(...);</span><br><span class="line">           sw.Close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然，这种通过Base64编码的方法效率比较低，那么可以采用WSE，支持附件，并以2进制形式传送，效率会更高。<br>（2）除了通过WebService，另外一种更简单的方法就是通过WebClient或者HttpWebRequest来模拟HTTP的POST动作来实现。这时候首先需要编写一个asp.net web form来响应上传，代码如下：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ Page language=<span class="string">"c#"</span> Codebehind=<span class="string">"WebForm1.aspx.cs"</span> AutoEventWireup=<span class="string">"false"</span> Inherits=<span class="string">"UploadFileWeb.WebForm1"</span> %&gt;</span><br><span class="line">&lt;!DOCTYPE HTML PUBLIC <span class="string">"-//W3C//DTD HTML 4.0 Transitional//EN"</span> &gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"> &lt;head&gt;</span><br><span class="line">  &lt;title&gt;WebForm1&lt;/title&gt;</span><br><span class="line">  &lt;meta name=<span class="string">"GENERATOR"</span> Content=<span class="string">"Microsoft Visual Studio .NET 7.1"</span>&gt;</span><br><span class="line">  &lt;meta name=<span class="string">"CODE_LANGUAGE"</span> Content=<span class="string">"C#"</span>&gt;</span><br><span class="line">  &lt;meta name=<span class="string">"vs_defaultClientScript"</span> content=<span class="string">"JavaScript"</span>&gt;</span><br><span class="line">  &lt;meta name=<span class="string">"vs_targetSchema"</span> content=<span class="string">"http://schemas.microsoft.com/intellisense/ie5"</span>&gt;</span><br><span class="line"> &lt;/head&gt;</span><br><span class="line"> &lt;body&gt;</span><br><span class="line">  &lt;form id=<span class="string">"Form1"</span> method=<span class="string">"post"</span> runat=<span class="string">"server"</span>&gt;</span><br><span class="line">  &lt;/form&gt;</span><br><span class="line"> &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Web;</span><br><span class="line"><span class="keyword">using</span> System.Web.SessionState;</span><br><span class="line"><span class="keyword">using</span> System.Web.UI;</span><br><span class="line"><span class="keyword">using</span> System.Web.UI.WebControls;</span><br><span class="line"><span class="keyword">using</span> System.Web.UI.HtmlControls;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title">UploadFileWeb</span></span><br><span class="line">&#123;</span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> WebForm1 的摘要说明。</span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"> public class WebForm1 : System.Web.UI.Page</span><br><span class="line"> &#123;</span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Page_Load</span>(<span class="params"><span class="keyword">object</span> sender, System.EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">   <span class="comment">// 在此处放置用户代码以初始化页面</span></span><br><span class="line">   <span class="keyword">foreach</span>( <span class="keyword">string</span> f <span class="keyword">in</span> Request.Files.AllKeys)</span><br><span class="line">   &#123;</span><br><span class="line">    HttpPostedFile file = Request.Files[f];</span><br><span class="line">    file.SaveAs(<span class="string">@"D:\Temp\"</span> + file.FileName);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">if</span>( Request.Params[<span class="string">"testKey"</span>] != <span class="literal">null</span> )</span><br><span class="line">   &#123;</span><br><span class="line">    Response.Write(Request.Params[<span class="string">"testKey"</span>]);</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="meta">#<span class="meta-keyword">region</span> Web 窗体设计器生成的代码</span></span><br><span class="line">  <span class="function"><span class="keyword">override</span> <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">OnInit</span>(<span class="params">EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">   <span class="comment">//</span></span><br><span class="line">   <span class="comment">// CODEGEN: 该调用是 ASP.NET Web 窗体设计器所必需的。</span></span><br><span class="line">   <span class="comment">//</span></span><br><span class="line">   InitializeComponent();</span><br><span class="line">   <span class="keyword">base</span>.OnInit(e);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> 设计器支持所需的方法 - 不要使用代码编辑器修改</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> 此方法的内容。</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>  &#123;   </span><br><span class="line">   <span class="keyword">this</span>.Load += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Page_Load);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其实这个页面跟我们平常写的asp.net上传文件代码是一样的，在Web 页的Request对象中包含有Files这个对象，里面就包含了通过POST方式上传的所有文件的信息，这时所需要做的就是调用 Request.Files[i].SaveAs方法。</p><p>但是怎么让才能在WinForm里面模拟想Web Form POST 数据呢？System.Net命名空间里面提供了两个非常有用的类，一个是WebClient，另外一个是HttpWebRequest类。如果我们不需要通过代理服务器来上传文件，那么非常简单，只需要简单的调用WebClient.UploadFile方法就能实现上传文件：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="keyword">object</span> sender, System.EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">   WebClient myWebClient = <span class="keyword">new</span> WebClient();</span><br><span class="line">   </span><br><span class="line">   myWebClient.UploadFile(<span class="string">"&lt;http://localhost/UploadFileWeb/WebForm1.aspx"</span>,<span class="string">"POST"</span>,<span class="string">@"D:\Temp\Java\JavaStart\JavaStart2.exe"</span>);&gt;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>是不是觉得很简单呢？确实就这么简单。</p><p>但是如果要通过代理服务器上传又怎么办呢？那就需要使用到HttpWebRequest，但是该类没有Upload方法，但是幸运的是我们通过Reflector反编译了WebClient.UploadFile方法后，我们发现其内部也是通过WebRequest来实现的，代码如下：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">byte</span>[] <span class="title">UploadFile</span>(<span class="params"><span class="keyword">string</span> address, <span class="keyword">string</span> method, <span class="keyword">string</span> fileName</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">      <span class="keyword">string</span> text1;</span><br><span class="line">      <span class="keyword">string</span> text2;</span><br><span class="line">      WebRequest request1;</span><br><span class="line">      <span class="keyword">string</span> text3;</span><br><span class="line">      <span class="keyword">byte</span>[] buffer1;</span><br><span class="line">      <span class="keyword">byte</span>[] buffer2;</span><br><span class="line">      <span class="keyword">long</span> num1;</span><br><span class="line">      <span class="keyword">byte</span>[] buffer3;</span><br><span class="line">      <span class="keyword">int</span> num2;</span><br><span class="line">      WebResponse response1;</span><br><span class="line">      <span class="keyword">byte</span>[] buffer4;</span><br><span class="line">      DateTime time1;</span><br><span class="line">      <span class="keyword">long</span> num3;</span><br><span class="line">      <span class="keyword">string</span>[] textArray1;</span><br><span class="line">      FileStream stream1 = <span class="literal">null</span>;</span><br><span class="line">      <span class="keyword">try</span></span><br><span class="line">      &#123;</span><br><span class="line">            fileName = Path.GetFullPath(fileName);</span><br><span class="line">            time1 = DateTime.Now;</span><br><span class="line">            num3 = time1.Ticks;</span><br><span class="line">            text1 = <span class="string">"---------------------"</span> + num3.ToString(<span class="string">"x"</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">this</span>.m_headers == <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                  <span class="keyword">this</span>.m_headers = <span class="keyword">new</span> WebHeaderCollection();</span><br><span class="line">            &#125;</span><br><span class="line">            text2 = <span class="keyword">this</span>.m_headers[<span class="string">"Content-Type"</span>];</span><br><span class="line">            <span class="keyword">if</span> (text2 != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                  <span class="keyword">if</span> (text2.ToLower(CultureInfo.InvariantCulture).StartsWith(<span class="string">"multipart/"</span>))</span><br><span class="line">                  &#123;</span><br><span class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> WebException(SR.GetString(<span class="string">"net_webclient_Multipart"</span>));</span><br><span class="line">                  &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                  text2 = <span class="string">"application/octet-stream"</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">this</span>.m_headers[<span class="string">"Content-Type"</span>] = <span class="string">"multipart/form-data; boundary="</span> + text1;</span><br><span class="line">            <span class="keyword">this</span>.m_responseHeaders = <span class="literal">null</span>;</span><br><span class="line">            stream1 = <span class="keyword">new</span> FileStream(fileName, FileMode.Open, FileAccess.Read);</span><br><span class="line">            request1 = WebRequest.Create(<span class="keyword">this</span>.GetUri(address));</span><br><span class="line">            request1.Credentials = <span class="keyword">this</span>.Credentials;</span><br><span class="line">            <span class="keyword">this</span>.CopyHeadersTo(request1);</span><br><span class="line">            request1.Method = method;</span><br><span class="line">            textArray1 = <span class="keyword">new</span> <span class="keyword">string</span>[<span class="number">7</span>];</span><br><span class="line">            textArray1[<span class="number">0</span>] = <span class="string">"--"</span>;</span><br><span class="line">            textArray1[<span class="number">1</span>] = text1;</span><br><span class="line">            textArray1[<span class="number">2</span>] = <span class="string">"\r\nContent-Disposition: form-data; name=\"file\"; filename=\""</span>;</span><br><span class="line">            textArray1[<span class="number">3</span>] = Path.GetFileName(fileName);</span><br><span class="line">            textArray1[<span class="number">4</span>] = <span class="string">"\"\r\nContent-Type: "</span>;</span><br><span class="line">            textArray1[<span class="number">5</span>] = text2;</span><br><span class="line">            textArray1[<span class="number">6</span>] = <span class="string">"\r\n\r\n"</span>;</span><br><span class="line">            text3 = <span class="keyword">string</span>.Concat(textArray1);</span><br><span class="line">            buffer1 = Encoding.UTF8.GetBytes(text3);</span><br><span class="line">            buffer2 = Encoding.ASCII.GetBytes(<span class="string">"\r\n--"</span> + text1 + <span class="string">"\r\n"</span>);</span><br><span class="line">            num1 = <span class="number">9223372036854775807</span>;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                  num1 = stream1.Length;</span><br><span class="line">                  request1.ContentLength = ((num1 + ((<span class="keyword">long</span>) buffer1.Length)) + ((<span class="keyword">long</span>) buffer2.Length));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span></span><br><span class="line">            &#123;</span><br><span class="line">            &#125;</span><br><span class="line">            buffer3 = <span class="keyword">new</span> <span class="keyword">byte</span>[Math.Min(((<span class="keyword">int</span>) <span class="number">8192</span>), ((<span class="keyword">int</span>) num1))];</span><br><span class="line">            <span class="keyword">using</span> (Stream stream2 = request1.GetRequestStream())</span><br><span class="line">            &#123;</span><br><span class="line">                  stream2.Write(buffer1, <span class="number">0</span>, buffer1.Length);</span><br><span class="line">                  <span class="keyword">do</span></span><br><span class="line">                  &#123;</span><br><span class="line">                        num2 = stream1.Read(buffer3, <span class="number">0</span>, buffer3.Length);</span><br><span class="line">                        <span class="keyword">if</span> (num2 != <span class="number">0</span>)</span><br><span class="line">                        &#123;</span><br><span class="line">                              stream2.Write(buffer3, <span class="number">0</span>, num2);</span><br><span class="line">                        &#125;</span><br><span class="line">                  &#125;</span><br><span class="line">                  <span class="keyword">while</span> ((num2 != <span class="number">0</span>));</span><br><span class="line">                  stream2.Write(buffer2, <span class="number">0</span>, buffer2.Length);</span><br><span class="line">            &#125;</span><br><span class="line">            stream1.Close();</span><br><span class="line">            stream1 = <span class="literal">null</span>;</span><br><span class="line">            response1 = request1.GetResponse();</span><br><span class="line">            <span class="keyword">this</span>.m_responseHeaders = response1.Headers;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>.ResponseAsBytes(response1);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">catch</span> (Exception exception1)</span><br><span class="line">      &#123;</span><br><span class="line">            <span class="keyword">if</span> (stream1 != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                  stream1.Close();</span><br><span class="line">                  stream1 = <span class="literal">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> ((exception1 <span class="keyword">is</span> WebException) || (exception1 <span class="keyword">is</span> SecurityException))</span><br><span class="line">            &#123;</span><br><span class="line">                  <span class="keyword">throw</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> WebException(SR.GetString(<span class="string">"net_webclient"</span>), exception1);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> buffer4;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这段代码里面其实最关键的就是如何模拟POST请求，通过分析代码和监视HTTP，我们可以发现模拟的POST格式如下：</p><p>———————–8c64f47716481f0  //时间戳<br>Content-Disposition: form-data; name=”file”; filename=”a.txt”  //文件名</p><p>Content-Type: application/octet-stream//文件的内容</p><p>———————–8c64f47716481f0</p><p>这时候，我们只需自己编码来模拟这么一组数据就行（我们还可以好好借鉴MS的代码呢），以下就是代码（声明一下，我是借用了别人的代码）</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">wwHttp</span></span><br><span class="line"> &#123;</span><br><span class="line"></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Fires progress events when using GetUrlEvents() to retrieve a URL.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">event</span> OnReceiveDataHandler OnReceiveData;</span><br><span class="line"> </span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Determines how data is POSTed when cPostBuffer is set.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> 1 - UrlEncoded</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> 2 - Multi-Part form vars</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> 4 - XML (raw buffer content type: text/xml)</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">int</span> PostMode</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">get</span> &#123; <span class="keyword">return</span> <span class="keyword">this</span>.nPostMode; &#125;</span><br><span class="line">   <span class="keyword">set</span> &#123; <span class="keyword">this</span>.nPostMode = <span class="keyword">value</span>; &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span>  User name used for Authentication.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span>  To use the currently logged in user when accessing an NTLM resource you can use "AUTOLOGIN".</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">string</span> Username</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">get</span> &#123; <span class="keyword">return</span> <span class="keyword">this</span>.cUsername; &#125;</span><br><span class="line">   <span class="keyword">set</span> &#123; cUsername = <span class="keyword">value</span>; &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Password for Authentication.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">string</span> Password</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">get</span> &#123;<span class="keyword">return</span> <span class="keyword">this</span>.cPassword;&#125;</span><br><span class="line">   <span class="keyword">set</span> &#123;<span class="keyword">this</span>.cPassword = <span class="keyword">value</span>;&#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Address of the Proxy Server to be used.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Use optional DEFAULTPROXY value to specify that you want to IE's Proxy Settings</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">string</span> ProxyAddress  </span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">get</span> &#123;<span class="keyword">return</span> <span class="keyword">this</span>.cProxyAddress;&#125;</span><br><span class="line">   <span class="keyword">set</span> &#123;<span class="keyword">this</span>.cProxyAddress = <span class="keyword">value</span>;&#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Semicolon separated Address list of the servers the proxy is not used for.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">string</span> ProxyBypass</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">get</span> &#123;<span class="keyword">return</span> <span class="keyword">this</span>.cProxyBypass;&#125;</span><br><span class="line">   <span class="keyword">set</span> &#123;<span class="keyword">this</span>.cProxyBypass = <span class="keyword">value</span>;&#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Username for a password validating Proxy. Only used if the proxy info is set.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">string</span> ProxyUsername</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">get</span> &#123;<span class="keyword">return</span> <span class="keyword">this</span>.cProxyUsername;&#125;</span><br><span class="line">   <span class="keyword">set</span> &#123;<span class="keyword">this</span>.cProxyUsername = <span class="keyword">value</span>;&#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Password for a password validating Proxy. Only used if the proxy info is set.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">string</span> ProxyPassword</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">get</span> &#123;<span class="keyword">return</span> <span class="keyword">this</span>.cProxyPassword;&#125;</span><br><span class="line">   <span class="keyword">set</span> &#123;<span class="keyword">this</span>.cProxyPassword = <span class="keyword">value</span>;&#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Timeout for the Web request in seconds. Times out on connection, read and send operations.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Default is 30 seconds.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">int</span> Timeout</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">get</span> &#123;<span class="keyword">return</span> <span class="keyword">this</span>.nConnectTimeout; &#125;</span><br><span class="line">   <span class="keyword">set</span> &#123;<span class="keyword">this</span>.nConnectTimeout = <span class="keyword">value</span>; &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Error Message if the Error Flag is set or an error value is returned from a method.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">string</span> ErrorMsg</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">get</span> &#123; <span class="keyword">return</span> <span class="keyword">this</span>.cErrorMsg; &#125;</span><br><span class="line">   <span class="keyword">set</span> &#123; <span class="keyword">this</span>.cErrorMsg = <span class="keyword">value</span>; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Error flag if an error occurred.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">bool</span> Error</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">get</span> &#123; <span class="keyword">return</span> <span class="keyword">this</span>.bError; &#125;</span><br><span class="line">   <span class="keyword">set</span> &#123; <span class="keyword">this</span>.bError = <span class="keyword">value</span>; &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Determines whether errors cause exceptions to be thrown. By default errors</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> are handled in the class and the Error property is set for error conditions.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> (not implemented at this time).</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">bool</span> ThrowExceptions</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">get</span> &#123; <span class="keyword">return</span> bThrowExceptions; &#125;</span><br><span class="line">   <span class="keyword">set</span> &#123; <span class="keyword">this</span>.bThrowExceptions = <span class="keyword">value</span>;&#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> If set to a non-zero value will automatically track cookies. The number assigned is the cookie count.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">bool</span> HandleCookies</span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">get</span> &#123; <span class="keyword">return</span> <span class="keyword">this</span>.bHandleCookies; &#125;</span><br><span class="line">   <span class="keyword">set</span> &#123; <span class="keyword">this</span>.bHandleCookies = <span class="keyword">value</span>; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> CookieCollection Cookies &#123;</span><br><span class="line">   <span class="keyword">get</span> &#123; <span class="keyword">return</span> <span class="keyword">this</span>.oCookies; &#125;</span><br><span class="line">   <span class="keyword">set</span> &#123; <span class="keyword">this</span>.Cookies = <span class="keyword">value</span>; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> HttpWebResponse WebResponse  &#123;</span><br><span class="line">   <span class="keyword">get</span> &#123; <span class="keyword">return</span> <span class="keyword">this</span>.oWebResponse;&#125;</span><br><span class="line">   <span class="keyword">set</span> &#123; <span class="keyword">this</span>.oWebResponse = <span class="keyword">value</span>; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> HttpWebRequest WebRequest  &#123;</span><br><span class="line">   <span class="keyword">get</span> &#123; <span class="keyword">return</span> <span class="keyword">this</span>.oWebRequest; &#125;</span><br><span class="line">   <span class="keyword">set</span> &#123; <span class="keyword">this</span>.oWebRequest = <span class="keyword">value</span>; &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">// *** member properties</span></span><br><span class="line">  <span class="comment">//string cPostBuffer = "";</span></span><br><span class="line">  MemoryStream oPostStream;</span><br><span class="line">  BinaryWriter oPostData;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">int</span> nPostMode = <span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">int</span> nConnectTimeout = <span class="number">30</span>;</span><br><span class="line">  <span class="keyword">string</span> cUserAgent = <span class="string">"West Wind HTTP .NET"</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">string</span> cUsername = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">string</span> cPassword = <span class="string">""</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">string</span> cProxyAddress = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">string</span> cProxyBypass = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">string</span> cProxyUsername = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">string</span> cProxyPassword = <span class="string">""</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">bool</span> bThrowExceptions = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">bool</span> bHandleCookies = <span class="literal">false</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">string</span> cErrorMsg = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">bool</span> bError = <span class="literal">false</span>;</span><br><span class="line">  </span><br><span class="line">  HttpWebResponse oWebResponse;</span><br><span class="line">  HttpWebRequest oWebRequest;</span><br><span class="line">  CookieCollection oCookies;</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">string</span> cMultiPartBoundary = <span class="string">"-----------------------------7cf2a327f01ae"</span>;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">wwHTTP</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">   <span class="comment">//</span></span><br><span class="line">   <span class="comment">// <span class="doctag">TODO:</span> Add constructor logic here</span></span><br><span class="line">   <span class="comment">//</span></span><br><span class="line"> </span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Adds POST form variables to the request buffer.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> HttpPostMode determines how parms are handled.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> 1 - UrlEncoded Form Variables. Uses key and value pairs (ie. "Name","Rick") to create URLEncoded content</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> 2 - Multi-Part Forms - not supported</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> 4 - XML block - Post a single XML block. Pass in as Key (1st Parm)</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> other - raw content buffer. Just assign to Key.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="Key"&gt;</span>Key value or raw buffer depending on post type<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="Value"&gt;</span>Value to store. Used only in key/value pair modes<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AddPostKey</span>(<span class="params"><span class="keyword">string</span> Key, <span class="keyword">byte</span>[] Value</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">this</span>.oPostData == <span class="literal">null</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">this</span>.oPostStream = <span class="keyword">new</span> MemoryStream();</span><br><span class="line">    <span class="keyword">this</span>.oPostData = <span class="keyword">new</span> BinaryWriter(<span class="keyword">this</span>.oPostStream);</span><br><span class="line">   &#125;</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">if</span> (Key == <span class="string">"RESET"</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">this</span>.oPostStream = <span class="keyword">new</span> MemoryStream();</span><br><span class="line">    <span class="keyword">this</span>.oPostData = <span class="keyword">new</span> BinaryWriter(<span class="keyword">this</span>.oPostStream);</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">switch</span>(<span class="keyword">this</span>.nPostMode)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">     <span class="keyword">this</span>.oPostData.Write(Encoding.GetEncoding(<span class="number">1252</span>).GetBytes(</span><br><span class="line">          Key + <span class="string">"="</span> + System.Web.HttpUtility.UrlEncode(Value) + <span class="string">"&amp;"</span>));</span><br><span class="line">     <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">     <span class="keyword">this</span>.oPostData.Write( Encoding.GetEncoding(<span class="number">1252</span>).GetBytes(</span><br><span class="line">      <span class="string">"--"</span> + <span class="keyword">this</span>.cMultiPartBoundary + <span class="string">"\r\n"</span> +</span><br><span class="line">      <span class="string">"Content-Disposition: form-data; name=\""</span> +Key+<span class="string">"\"\r\n\r\n"</span>) );</span><br><span class="line">     </span><br><span class="line">     <span class="keyword">this</span>.oPostData.Write( Value );</span><br><span class="line"> </span><br><span class="line">     <span class="keyword">this</span>.oPostData.Write( Encoding.GetEncoding(<span class="number">1252</span>).GetBytes(<span class="string">"\r\n"</span>) );</span><br><span class="line">     <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">     <span class="keyword">this</span>.oPostData.Write( Value );</span><br><span class="line">     <span class="keyword">break</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AddPostKey</span>(<span class="params"><span class="keyword">string</span> Key, <span class="keyword">string</span> Value</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">   <span class="keyword">this</span>.AddPostKey(Key,Encoding.GetEncoding(<span class="number">1252</span>).GetBytes(Value));</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Adds a fully self contained POST buffer to the request.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Works for XML or previously encoded content.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="PostBuffer"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">AddPostKey</span>(<span class="params"><span class="keyword">string</span> FullPostBuffer</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">   <span class="keyword">this</span>.oPostData.Write( Encoding.GetEncoding(<span class="number">1252</span>).GetBytes(FullPostBuffer) );</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="title">AddPostFile</span>(<span class="params"><span class="keyword">string</span> Key,<span class="keyword">string</span> FileName</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">   <span class="keyword">byte</span>[] lcFile; </span><br><span class="line"> </span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">this</span>.nPostMode != <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="keyword">this</span>.cErrorMsg = <span class="string">"File upload allowed only with Multi-part forms"</span>;</span><br><span class="line">    <span class="keyword">this</span>.bError = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">try</span></span><br><span class="line">   &#123;   </span><br><span class="line">    FileStream loFile = <span class="keyword">new</span> FileStream(FileName,System.IO.FileMode.Open,System.IO.FileAccess.Read);</span><br><span class="line"> </span><br><span class="line">    lcFile = <span class="keyword">new</span> <span class="keyword">byte</span>[loFile.Length];</span><br><span class="line">    loFile.Read(lcFile,<span class="number">0</span>,(<span class="keyword">int</span>) loFile.Length);</span><br><span class="line">    loFile.Close();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">catch</span>(Exception e)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">this</span>.cErrorMsg = e.Message;</span><br><span class="line">    <span class="keyword">this</span>.bError = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">this</span>.oPostData.Write( Encoding.GetEncoding(<span class="number">1252</span>).GetBytes(</span><br><span class="line">     <span class="string">"--"</span> + <span class="keyword">this</span>.cMultiPartBoundary + <span class="string">"\r\n"</span>  +</span><br><span class="line">     <span class="string">"Content-Disposition: form-data; name=\""</span> + Key + <span class="string">"\" filename=\""</span> +</span><br><span class="line">     <span class="keyword">new</span> FileInfo(FileName).Name + <span class="string">"\"\r\n\r\n"</span>) );</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">this</span>.oPostData.Write( lcFile );</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">this</span>.oPostData.Write( Encoding.GetEncoding(<span class="number">1252</span>).GetBytes(<span class="string">"\r\n"</span>)) ;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Return a the result from an HTTP Url into a StreamReader.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Client code should call Close() on the returned object when done reading.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="Url"&gt;</span>Url to retrieve.<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="WebRequest"&gt;</span>An HttpWebRequest object that can be passed in with properties preset.<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">  <span class="function"><span class="keyword">protected</span> StreamReader <span class="title">GetUrlStream</span>(<span class="params"><span class="keyword">string</span> Url,HttpWebRequest Request</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">   <span class="keyword">try</span></span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">this</span>.bError = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">this</span>.cErrorMsg = <span class="string">""</span>;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> (Request == <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     Request =  (HttpWebRequest) System.Net.WebRequest.Create(Url);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    Request.UserAgent = <span class="keyword">this</span>.cUserAgent;</span><br><span class="line">    Request.Timeout = <span class="keyword">this</span>.nConnectTimeout * <span class="number">1000</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// *** Save for external access</span></span><br><span class="line">    <span class="keyword">this</span>.oWebRequest = Request;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// *** Handle Security for the request</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.cUsername.Length &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span> (<span class="keyword">this</span>.cUsername==<span class="string">"AUTOLOGIN"</span>)</span><br><span class="line">      Request.Credentials = CredentialCache.DefaultCredentials;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">      Request.Credentials = <span class="keyword">new</span> NetworkCredential(<span class="keyword">this</span>.cUsername,<span class="keyword">this</span>.cPassword);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">   </span><br><span class="line">    <span class="comment">// *** Handle Proxy Server configuration</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.cProxyAddress.Length &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span> (<span class="keyword">this</span>.cProxyAddress == <span class="string">"DEFAULTPROXY"</span>)</span><br><span class="line">     &#123;</span><br><span class="line">      Request.Proxy = <span class="keyword">new</span> WebProxy();</span><br><span class="line">      Request.Proxy = WebProxy.GetDefaultProxy();</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">     &#123;</span><br><span class="line">      WebProxy loProxy = <span class="keyword">new</span> WebProxy(<span class="keyword">this</span>.cProxyAddress,<span class="literal">true</span>);</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.cProxyBypass.Length &gt; <span class="number">0</span>)</span><br><span class="line">      &#123;</span><br><span class="line">       loProxy.BypassList = <span class="keyword">this</span>.cProxyBypass.Split(<span class="string">';'</span>);</span><br><span class="line">      &#125;</span><br><span class="line"> </span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.cProxyUsername.Length &gt; <span class="number">0</span>)</span><br><span class="line">       loProxy.Credentials = <span class="keyword">new</span> NetworkCredential(<span class="keyword">this</span>.cProxyUsername,<span class="keyword">this</span>.cProxyPassword);</span><br><span class="line"> </span><br><span class="line">      Request.Proxy = loProxy;</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// *** Handle cookies - automatically re-assign</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.bHandleCookies)</span><br><span class="line">    &#123;</span><br><span class="line">     Request.CookieContainer = <span class="keyword">new</span> CookieContainer();</span><br><span class="line">     <span class="keyword">if</span> (<span class="keyword">this</span>.oCookies != <span class="literal">null</span> &amp;&amp; <span class="keyword">this</span>.oCookies.Count &gt; <span class="number">0</span>)</span><br><span class="line">     &#123;</span><br><span class="line">      Request.CookieContainer.Add(<span class="keyword">this</span>.oCookies);</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// *** Deal with the POST buffer if any</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.oPostData != <span class="literal">null</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     Request.Method = <span class="string">"POST"</span>;</span><br><span class="line">     <span class="keyword">switch</span> (<span class="keyword">this</span>.nPostMode)</span><br><span class="line">     &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">       Request.ContentType = <span class="string">"application/x-www-form-urlencoded"</span>;</span><br><span class="line">       <span class="comment">// strip off any trailing &amp; which can cause problems with some</span></span><br><span class="line">       <span class="comment">// http servers</span></span><br><span class="line"><span class="comment">//       if (this.cPostBuffer.EndsWith("&amp;"))</span></span><br><span class="line"><span class="comment">//        this.cPostBuffer = this.cPostBuffer.Substring(0,this.cPostBuffer.Length-1);</span></span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">       Request.ContentType = <span class="string">"multipart/form-data; boundary="</span> + <span class="keyword">this</span>.cMultiPartBoundary;</span><br><span class="line">       <span class="keyword">this</span>.oPostData.Write( Encoding.GetEncoding(<span class="number">1252</span>).GetBytes( <span class="string">"--"</span> + <span class="keyword">this</span>.cMultiPartBoundary + <span class="string">"\r\n"</span> ) );</span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">       Request.ContentType = <span class="string">"text/xml"</span>;</span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">       <span class="keyword">goto</span> <span class="keyword">case</span> <span class="number">1</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     </span><br><span class="line"> </span><br><span class="line">     Stream loPostData = Request.GetRequestStream();</span><br><span class="line">     <span class="comment">//loPostData.Write(lcPostData,0,lcPostData.Length);</span></span><br><span class="line">     <span class="keyword">this</span>.oPostStream.WriteTo(loPostData);   </span><br><span class="line">     </span><br><span class="line">     <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="keyword">this</span>.oPostStream.Length];</span><br><span class="line">     buffer = <span class="keyword">this</span>.oPostStream.ToArray();</span><br><span class="line">     Console.Write(Encoding.GetEncoding(<span class="number">1252</span>).GetString(buffer,<span class="number">0</span>,buffer.Length));</span><br><span class="line"> </span><br><span class="line">     <span class="comment">//*** Close the memory stream</span></span><br><span class="line">     <span class="keyword">this</span>.oPostStream.Close();</span><br><span class="line">     <span class="keyword">this</span>.oPostStream = <span class="literal">null</span>;</span><br><span class="line"> </span><br><span class="line">     </span><br><span class="line">     <span class="comment">//*** Close the Binary Writer</span></span><br><span class="line">     <span class="keyword">this</span>.oPostData.Close();</span><br><span class="line">     <span class="keyword">this</span>.oPostData = <span class="literal">null</span>;</span><br><span class="line"> </span><br><span class="line">     <span class="comment">//*** Close Request Stream</span></span><br><span class="line">     loPostData.Close();</span><br><span class="line"> </span><br><span class="line">     <span class="comment">// *** clear the POST buffer</span></span><br><span class="line">     <span class="comment">//this.cPostBuffer = "";</span></span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">// *** Retrieve the response headers</span></span><br><span class="line">    HttpWebResponse Response = (HttpWebResponse) Request.GetResponse();</span><br><span class="line"> </span><br><span class="line">    <span class="comment">// ** Save cookies the server sends</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.bHandleCookies) </span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span> (Response.Cookies.Count &gt; <span class="number">0</span>) </span><br><span class="line">     &#123;</span><br><span class="line">      <span class="keyword">if</span> (<span class="keyword">this</span>.oCookies == <span class="literal">null</span>) </span><br><span class="line">      &#123;</span><br><span class="line">       <span class="keyword">this</span>.oCookies = Response.Cookies;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">       <span class="comment">// ** If we already have cookies update the list</span></span><br><span class="line">       <span class="keyword">foreach</span> (Cookie oRespCookie <span class="keyword">in</span> Response.Cookies) </span><br><span class="line">       &#123;</span><br><span class="line">        <span class="keyword">bool</span> bMatch = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">foreach</span>(Cookie oReqCookie <span class="keyword">in</span> <span class="keyword">this</span>.oCookies) </span><br><span class="line">        &#123;</span><br><span class="line">         <span class="keyword">if</span> (oReqCookie.Name == oRespCookie.Name) </span><br><span class="line">         &#123;</span><br><span class="line">          oReqCookie.Value = oRespCookie.Name;</span><br><span class="line">          bMatch = <span class="literal">true</span>;</span><br><span class="line">          <span class="keyword">break</span>; <span class="comment">//</span></span><br><span class="line">         &#125;</span><br><span class="line">        &#125; <span class="comment">// for each ReqCookies</span></span><br><span class="line">        <span class="keyword">if</span> (!bMatch)</span><br><span class="line">         <span class="keyword">this</span>.oCookies.Add(oRespCookie);</span><br><span class="line">       &#125; <span class="comment">// for each Response.Cookies</span></span><br><span class="line">      &#125;  <span class="comment">// this.Cookies == null</span></span><br><span class="line">     &#125; <span class="comment">// if Response.Cookie.Count &gt; 0</span></span><br><span class="line">    &#125;  <span class="comment">// if this.bHandleCookies = 0</span></span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">    <span class="comment">// *** Save the response object for external access</span></span><br><span class="line">    <span class="keyword">this</span>.oWebResponse = Response;</span><br><span class="line"> </span><br><span class="line">    Encoding enc;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">     <span class="keyword">if</span> (Response.ContentEncoding.Length  &gt; <span class="number">0</span>)</span><br><span class="line">      enc = Encoding.GetEncoding(Response.ContentEncoding);</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">      enc = Encoding.GetEncoding(<span class="number">1252</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span></span><br><span class="line">    &#123;</span><br><span class="line">     <span class="comment">// *** Invalid encoding passed</span></span><br><span class="line">     enc = Encoding.GetEncoding(<span class="number">1252</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// *** drag to a stream</span></span><br><span class="line">    StreamReader strResponse =</span><br><span class="line">     <span class="keyword">new</span> StreamReader(Response.GetResponseStream(),enc);</span><br><span class="line">    <span class="keyword">return</span> strResponse;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">catch</span>(Exception e)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.bThrowExceptions)</span><br><span class="line">     <span class="keyword">throw</span> e;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">this</span>.cErrorMsg = e.Message;</span><br><span class="line">    <span class="keyword">this</span>.bError = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Return a the result from an HTTP Url into a StreamReader.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Client code should call Close() on the returned object when done reading.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="Url"&gt;</span>Url to retrieve.<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> StreamReader <span class="title">GetUrlStream</span>(<span class="params"><span class="keyword">string</span> Url</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">   HttpWebRequest oHttpWebRequest = <span class="literal">null</span>;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">this</span>.GetUrlStream(Url,oHttpWebRequest);</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Return a the result from an HTTP Url into a StreamReader.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Client code should call Close() on the returned object when done reading.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="Request"&gt;</span>A Request object<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> StreamReader <span class="title">GetUrlStream</span>(<span class="params">HttpWebRequest Request</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">   <span class="keyword">return</span> <span class="keyword">this</span>.GetUrlStream(Request.RequestUri.AbsoluteUri,Request);</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Return a the result from an HTTP Url into a string.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="Url"&gt;</span>Url to retrieve.<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">GetUrl</span>(<span class="params"><span class="keyword">string</span> Url</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">   StreamReader oHttpResponse = <span class="keyword">this</span>.GetUrlStream(Url);</span><br><span class="line">   <span class="keyword">if</span> (oHttpResponse == <span class="literal">null</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">string</span> lcResult = oHttpResponse.ReadToEnd();</span><br><span class="line">   oHttpResponse.Close();</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> lcResult;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Return a the result from an HTTP Url into a string.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="Url"&gt;</span>Url to retrieve.<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">byte</span>[] <span class="title">GetUrlBytes</span>(<span class="params"><span class="keyword">string</span> Url</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">   StreamReader oHttpResponse = <span class="keyword">this</span>.GetUrlStream(Url);</span><br><span class="line">   </span><br><span class="line">   <span class="keyword">if</span> (oHttpResponse == <span class="literal">null</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">string</span> lcResult = oHttpResponse.ReadToEnd();</span><br><span class="line">   oHttpResponse.Close();</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> Retrieves URL with events in the OnReceiveData event.</span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="Url"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="BufferSize"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">  <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">GetUrlEvents</span>(<span class="params"><span class="keyword">string</span> Url,<span class="keyword">long</span> BufferSize</span>)</span></span><br><span class="line"><span class="function"></span>  &#123;</span><br><span class="line">  </span><br><span class="line">   StreamReader oHttpResponse = <span class="keyword">this</span>.GetUrlStream(Url);</span><br><span class="line">   <span class="keyword">if</span> (oHttpResponse == <span class="literal">null</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">long</span> lnSize = BufferSize;</span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">this</span>.oWebResponse.ContentLength &gt; <span class="number">0</span>)</span><br><span class="line">    lnSize = <span class="keyword">this</span>.oWebResponse.ContentLength;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">    lnSize = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">   Encoding enc = Encoding.GetEncoding(<span class="number">1252</span>);</span><br><span class="line"> </span><br><span class="line">   StringBuilder loWriter = <span class="keyword">new</span> StringBuilder((<span class="keyword">int</span>) lnSize);</span><br><span class="line">      </span><br><span class="line">   <span class="keyword">char</span>[] lcTemp = <span class="keyword">new</span> <span class="keyword">char</span>[BufferSize];</span><br><span class="line"> </span><br><span class="line">   OnReceiveDataEventArgs oArgs = <span class="keyword">new</span> OnReceiveDataEventArgs();</span><br><span class="line">   oArgs.TotalBytes = lnSize;</span><br><span class="line"> </span><br><span class="line">   lnSize = <span class="number">1</span>;</span><br><span class="line">   <span class="keyword">int</span> lnCount = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">long</span> lnTotalBytes = <span class="number">0</span>;</span><br><span class="line"> </span><br><span class="line">   <span class="keyword">while</span> (lnSize &gt; <span class="number">0</span>)</span><br><span class="line">   &#123;</span><br><span class="line">    lnSize = oHttpResponse.Read(lcTemp,<span class="number">0</span>,(<span class="keyword">int</span>) BufferSize);</span><br><span class="line">    <span class="keyword">if</span> (lnSize &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">     loWriter.Append( lcTemp,<span class="number">0</span>,(<span class="keyword">int</span>) lnSize );</span><br><span class="line">     lnCount++;</span><br><span class="line">     lnTotalBytes += lnSize;</span><br><span class="line"> </span><br><span class="line">     <span class="comment">// *** Raise an event if hooked up</span></span><br><span class="line">     <span class="keyword">if</span> (<span class="keyword">this</span>.OnReceiveData != <span class="literal">null</span>)</span><br><span class="line">     &#123;</span><br><span class="line">      <span class="comment"><span class="doctag">///</span> *** Update the event handler</span></span><br><span class="line">      oArgs.CurrentByteCount = lnTotalBytes;</span><br><span class="line">      oArgs.NumberOfReads = lnCount;</span><br><span class="line">      oArgs.CurrentChunk = lcTemp;</span><br><span class="line">      <span class="keyword">this</span>.OnReceiveData(<span class="keyword">this</span>,oArgs);</span><br><span class="line"> </span><br><span class="line">      <span class="comment">// *** Check for cancelled flag</span></span><br><span class="line">      <span class="keyword">if</span> (oArgs.Cancel)</span><br><span class="line">       <span class="keyword">goto</span> CloseDown;</span><br><span class="line">     &#125;</span><br><span class="line">    &#125;</span><br><span class="line">   &#125; <span class="comment">// while</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">  CloseDown:</span><br><span class="line">   oHttpResponse.Close();</span><br><span class="line"> </span><br><span class="line">   <span class="comment">// *** Send Done notification</span></span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">this</span>.OnReceiveData != <span class="literal">null</span> &amp;&amp; !oArgs.Cancel)</span><br><span class="line">   &#123;</span><br><span class="line">    <span class="comment">// *** Update the event handler</span></span><br><span class="line">    oArgs.Done = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">this</span>.OnReceiveData(<span class="keyword">this</span>,oArgs);</span><br><span class="line">   &#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//   return lcHtml;</span></span><br><span class="line">   <span class="keyword">return</span> loWriter.ToString();</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">delegate</span> <span class="keyword">void</span> <span class="title">OnReceiveDataHandler</span>(<span class="params"><span class="keyword">object</span> sender, OnReceiveDataEventArgs e</span>)</span>;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">OnReceiveDataEventArgs</span></span><br><span class="line">  &#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">long</span> CurrentByteCount=<span class="number">0</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">long</span> TotalBytes = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">int</span> NumberOfReads = <span class="number">0</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">char</span>[] CurrentChunk;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">bool</span> Done = <span class="literal">false</span>;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">bool</span> Cancel = <span class="literal">false</span>;</span><br><span class="line">  &#125;  </span><br><span class="line"> &#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p> wwHttp这个类里面，不仅仅可以传送文件AddPostFile方法，还可以传送变量AddPostKey方法。</p><p>这样，如果我们要通过代理服务器传送文件，就可以编写如下的代码了：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">wwHttp ww = <span class="keyword">new</span> wwHttp();</span><br><span class="line">ww.ProxyAddress = <span class="string">"202.132.156.124"</span>;   </span><br><span class="line">ww.PostMode = <span class="number">2</span>;</span><br><span class="line">ww.AddPostKey(<span class="string">"testKey"</span>,<span class="string">"test"</span>);</span><br><span class="line">ww.AddPostFile(<span class="string">"myfile"</span>,<span class="string">@"D:\Temp\Java\JavaStart\JavaStart2.jar"</span>);  </span><br><span class="line"></span><br><span class="line"><span class="keyword">string</span> shtml = ww.GetUrlEvents(<span class="string">"http://localhost/UploadFileWeb/WebForm1.aspx"</span>,<span class="number">409600</span>);</span><br><span class="line">Console.Write(shtml);</span><br></pre></td></tr></table></figure><h2 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h2><p>（1）通过Web Services传文件。</p><p>（2）如果不需要使用代理，使用WebClient类</p><p>（3）如果需要使用代理，使用扩展得到的类wwHttp</p>]]></content>
      
      
      <categories>
          
          <category> C# </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C# </tag>
            
            <tag> WinForm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MVVM中轻松实现Command绑定任意事件的Command</title>
      <link href="/2011/07/12/MVVM%E4%B8%AD%E8%BD%BB%E6%9D%BE%E5%AE%9E%E7%8E%B0Command%E7%BB%91%E5%AE%9A%EF%BC%88%E4%B8%89%EF%BC%89%E4%BB%BB%E6%84%8F%E4%BA%8B%E4%BB%B6%E7%9A%84Command/"/>
      <url>/2011/07/12/MVVM%E4%B8%AD%E8%BD%BB%E6%9D%BE%E5%AE%9E%E7%8E%B0Command%E7%BB%91%E5%AE%9A%EF%BC%88%E4%B8%89%EF%BC%89%E4%BB%BB%E6%84%8F%E4%BA%8B%E4%BB%B6%E7%9A%84Command/</url>
      
        <content type="html"><![CDATA[<p>原文链接：<a href="https://blog.csdn.net/qing2005/article/details/6601475" target="_blank" rel="noopener">https://blog.csdn.net/qing2005/article/details/6601475</a></p><p>WPF中不是所有的控件都有Command属性的，如果窗体我需要在ViewModel中处理Loaded事件命令，或者其他事件的命令时，很难都过绑定Command完成，必须要注册依赖属性或事件等，太麻烦了。我喜欢简约、有效的方式，现在我和大家一起分享一下。</p><p>场景，我需要处理Button的Click和MouseMove事件，但又避免用后置代码，尽量要在ViewModel中获取。单独一个Click可以通过Button的Command来完成，在前两篇文章中我已介绍过，现在就来处理MouseMove事件，这是需要一个System.Windows.Interactivity.dll，该dll是安装Blend后才有的，在C:\Program Files\Microsoft SDKs\Expression\Blend.NETFramework\v4.0\Libraries目录中，然后我们仍需要Prism.dll。</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;Window x:Class=<span class="string">"WpfApplication1.Window2"</span></span><br><span class="line">        xmlns=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span></span><br><span class="line">        xmlns:x=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml"</span></span><br><span class="line">xmlns:i=<span class="string">"clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"</span></span><br><span class="line">xmlns:vm=<span class="string">"clr-namespace:WpfApplication1"</span></span><br><span class="line">        Title=<span class="string">"Window2"</span> Height=<span class="string">"124"</span> Width=<span class="string">"214"</span>&gt;</span><br><span class="line">&lt;Window.DataContext&gt;</span><br><span class="line">&lt;vm:Window2ViewModel /&gt;</span><br><span class="line">&lt;/Window.DataContext&gt;</span><br><span class="line">    &lt;Grid&gt;</span><br><span class="line">&lt;Button Name=<span class="string">"btn"</span> Content=<span class="string">"Button"</span> Height=<span class="string">"33"</span> HorizontalAlignment=<span class="string">"Left"</span> Margin=<span class="string">"40,24,0,0"</span> VerticalAlignment=<span class="string">"Top"</span> Width=<span class="string">"109"</span>&gt;</span><br><span class="line">&lt;i:Interaction.Triggers&gt;</span><br><span class="line">&lt;i:EventTrigger EventName=<span class="string">"Click"</span>&gt;</span><br><span class="line">&lt;i:InvokeCommandAction Command=<span class="string">"&#123;Binding Command1&#125;"</span> CommandParameter=<span class="string">"10"</span> /&gt;</span><br><span class="line">&lt;/i:EventTrigger&gt;</span><br><span class="line">&lt;i:EventTrigger EventName=<span class="string">"MouseMove"</span>&gt;</span><br><span class="line">&lt;i:InvokeCommandAction Command=<span class="string">"&#123;Binding Command2&#125;"</span> CommandParameter=<span class="string">"&#123;Binding ElementName=btn&#125;"</span> /&gt;</span><br><span class="line">&lt;/i:EventTrigger&gt;</span><br><span class="line">&lt;/i:Interaction.Triggers&gt;</span><br><span class="line">&lt;/Button&gt;</span><br><span class="line">&lt;/Grid&gt;</span><br><span class="line">&lt;/Window&gt;</span><br></pre></td></tr></table></figure><p>注意；xmlns:i=”clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity”就是导入Blend的dll，然后在控件内部用&lt;i:Interaction.Triggers/&gt;即可，其它应该一看就知道，我通过事件触发器，来引发ViewModel中两个Command，第二个Command的参数是Button对象，通过ElementName=btn来指定。</p><p>ViewModel：</p><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title">WpfApplication1</span> &#123;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Window2ViewModel</span> &#123;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> ICommand Command1 &#123;</span><br><span class="line"><span class="keyword">get</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> DelegateCommand&lt;<span class="keyword">string</span>&gt;((str) =&gt; &#123;</span><br><span class="line">MessageBox.Show(<span class="string">"Command1 with parameter:"</span>+str);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">public</span> ICommand Command2 &#123;</span><br><span class="line"><span class="keyword">get</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> DelegateCommand&lt;Button&gt;((button) =&gt; &#123;</span><br><span class="line">Point p = Mouse.GetPosition(button);</span><br><span class="line">button.Content = <span class="keyword">string</span>.Format(<span class="string">"&#123;0&#125;,&#123;1&#125;"</span>, p.X, p.Y);</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> WPF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WPF </tag>
            
            <tag> C# </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
